{"version":3,"file":"static/js/94.9941cb09.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/CastCard/CastCard.module.css?6050","components/CastCard/CastCard.jsx","webpack://react-homework-template/./src/components/CastList/CastList.module.css?59ac","components/CastList/CastList.jsx","../node_modules/nanoid/index.browser.js","components/Cast/Cast.jsx","components/Loader/Loader.jsx","components/utils/api-servises.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castItem\":\"CastCard_castItem__zzlIx\",\"castImg\":\"CastCard_castImg__FsBf6\",\"castTitlesBlock\":\"CastCard_castTitlesBlock__vpEjx\",\"castTitle\":\"CastCard_castTitle__TDA3W\",\"castCharacter\":\"CastCard_castCharacter__D9L3f\"};","import css from './CastCard.module.css';\nimport defaultImg from '../../img/default-bg.jpg';\n\nconst CastCard = ({ name, profile_path, character }) => {\n  const imgUrl = profile_path\n    ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n    : defaultImg;\n  return (\n    <li className={css.castItem}>\n      <img className={css.castImg} src={imgUrl} alt={name} />\n      <div className={css.castTitlesBlock}>\n        <p className={css.castTitle}>{name}</p>\n        <p className={css.castCharacter}>\n          <i>Character:</i> {character}\n        </p>\n      </div>\n    </li>\n  );\n};\n\nexport default CastCard;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"CastList_wrapper__WHtyS\"};","import CastCard from 'components/CastCard/CastCard';\nimport css from './CastList.module.css';\nimport { nanoid } from 'nanoid';\n\nconst CastList = ({ cast }) => {\n  return (\n    <ul className={css.wrapper}>\n      {cast.map(({ name, profile_path, character }) => (\n        <CastCard\n          key={nanoid()}\n          name={name}\n          profile_path={profile_path}\n          character={character}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default CastList;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import CastList from 'components/CastList/CastList';\nimport { useEffect, useState } from 'react';\nimport { fetchMovieCredits } from 'components/utils/api-servises';\nimport { useParams } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\n\nconst Cast = () => {\n  const [cast, setCast] = useState();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function getMovieCredits() {\n      setIsLoading(true);\n      try {\n        const data = await fetchMovieCredits(movieId);\n        setCast(data.cast);\n      } catch (error) {\n        setError('Something went wrong:(');\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    getMovieCredits();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n\n      {cast?.length === 0 && (\n        <p>We do not have information about any character</p>\n      )}\n      {!isLoading && !error && cast && <CastList cast={cast} />}\n    </>\n  );\n};\n\nexport default Cast;\n","const { ThreeDots } = require('react-loader-spinner');\n\nconst Loader = () => {\n  return (\n    <ThreeDots\n      color=\"#1c2425\"\n      wrapperStyle={{\n        justifyContent: 'center',\n      }}\n    />\n  );\n};\n\nexport default Loader;\n","import axios from 'axios';\nconst API_KEY = 'd393339f8c84c0e0197b2010530b6601';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendyMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchSearchedMovies = async search => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${search}&language=en-US&page=1`\n  );\n  return response.data;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieCredits = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n"],"names":["_ref","name","profile_path","character","imgUrl","concat","defaultImg","_jsxs","className","css","children","_jsx","src","alt","cast","map","_ref2","CastCard","size","arguments","length","undefined","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","nanoid","_useState","useState","_useState2","_slicedToArray","setCast","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setIsLoading","movieId","useParams","useEffect","_getMovieCredits","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","fetchMovieCredits","sent","t0","console","log","finish","stop","apply","getMovieCredits","_Fragment","Loader","CastList","ThreeDots","require","color","wrapperStyle","justifyContent","API_KEY","BASE_URL","fetchTrendyMovies","response","axios","abrupt","fetchSearchedMovies","_callee2","search","_context2","_x","fetchMovieDetails","_ref3","_callee3","_context3","_x2","_ref4","_callee4","_context4","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}